{"ast":null,"code":"var _jsxFileName = \"/home/nirav/Training and Development Cell/Web Development/React/10-ServerSide-Rendering/dynamic-routes/pages/users.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport axios from 'axios';\nimport Link from 'next/link'; // fetch data from external source \n\nconst UserLink = props => {\n  return __jsx(React.Fragment, null, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `/users/${props.user.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.user.name))));\n};\n\nconst Users = props => {\n  let userLinks = props.users.map(user => {\n    return __jsx(UserLink, {\n      user: user,\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  });\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" User List \"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, userLinks));\n}; //fetch user list \n\n\nUsers.getInitialProps = async () => {\n  let response = await axios.get('https://jsonplaceholder.typicode.com/users');\n  console.log('Full Data ', response.data);\n  let users = response.data;\n  return {\n    users\n  };\n};\n\nexport default Users;","map":{"version":3,"sources":["/home/nirav/Training and Development Cell/Web Development/React/10-ServerSide-Rendering/dynamic-routes/pages/users.js"],"names":["Layout","axios","Link","UserLink","props","user","id","name","Users","userLinks","users","map","getInitialProps","response","get","console","log","data"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAS;AACtB,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,UAASA,KAAK,CAACC,IAAN,CAAWC,EAAG,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,IAAf,CAFJ,CADJ,CADJ,CADJ;AAUH,CAXD;;AAaA,MAAMC,KAAK,GAAIJ,KAAD,IAAS;AACnB,MAAIK,SAAS,GAAGL,KAAK,CAACM,KAAN,CAAYC,GAAZ,CAAiBN,IAAD,IAAQ;AACpC,WAAO,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFe,CAAhB;AAGA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,SAAL,CAFJ,CADJ;AAMH,CAVD,C,CAaA;;;AACAD,KAAK,CAACI,eAAN,GAAwB,YAAS;AAC7B,MAAIC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,4CAAV,CAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAAQ,CAACI,IAAnC;AACA,MAAIP,KAAK,GAAGG,QAAQ,CAACI,IAArB;AAGA,SAAQ;AAACP,IAAAA;AAAD,GAAR;AAEH,CARD;;AAUA,eAAeF,KAAf","sourcesContent":["import Layout from \"../components/Layout\"\nimport axios from 'axios';\nimport Link from 'next/link';\n// fetch data from external source \n\nconst UserLink = (props)=>{\n    return (\n        <>\n            <li > \n                <Link href={`/users/${props.user.id}`}>\n                {/* <Link href={`/users/${props.user.name}`}> */}\n                    <a>{props.user.name}</a> \n                </Link>\n            </li>\n        </>\n    )\n}\n\nconst Users = (props)=>{\n    let userLinks = props.users.map((user)=>{\n        return <UserLink user={user} key={user.id}/>\n    }); \n    return(\n        <Layout>\n            <h1> User List </h1>\n            <ul>{userLinks}</ul>\n        </Layout>\n    )\n}\n\n\n//fetch user list \nUsers.getInitialProps = async()=>{\n    let response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    console.log('Full Data ', response.data);\n    let users = response.data; \n\n\n    return ({users})\n\n}\n\nexport default Users;"]},"metadata":{},"sourceType":"module"}